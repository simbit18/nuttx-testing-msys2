name: Testing windows summaries

permissions:
  contents: read
on: 
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/ci_test_report.yml'

jobs:
  build-and-test-windows:
    name: Test Windows
    runs-on: windows-latest
    steps:
    - name: Adding markdown bash
      run: |
        echo '### Hello world 1! ' >> $GITHUB_STEP_SUMMARY
        cat $GITHUB_STEP_SUMMARY
        {
          echo "### :rocket: Workflow inputs"
          echo "| Arg                 | Value |"
          echo "| ------------------- | ----- |"
          echo "| Print inputs        | ${{ inputs.print-inputs }} |"
          echo "| Environment         | ${{ inputs.environment }} |"
          echo "| Cluster             | ${{ inputs.cluster }} |"
        } >> $GITHUB_STEP_SUMMARY
      shell: bash
    - name: Adding markdown PowerShell 
      run: |
         echo '### Hello world 2! ' >> $env:GITHUB_STEP_SUMMARY
         '### Hello world 3! ' >> $env:GITHUB_STEP_SUMMARY
  build-and-test-linux:
    name: Test Linux
    runs-on: ubuntu-latest
    steps:
    - name: Adding markdown bash
      run: |
        echo '### Hello world Linux 1! ' >> $GITHUB_STEP_SUMMARY
        cat $GITHUB_STEP_SUMMARY
        {
          echo "### :rocket: Workflow inputs"
          echo "| Arg                 | Value |"
          echo "| ------------------- | ----- |"
          echo "| Print inputs        | ${{ inputs.print-inputs }} |"
          echo "| Environment         | ${{ inputs.environment }} |"
          echo "| Cluster             | ${{ inputs.cluster }} |"
        } >> $GITHUB_STEP_SUMMARY
  build-and-test-macos:
    name: Test macOS
    runs-on: macos-13
    steps:
    - name: Adding markdown bash
      run: |
        echo '### Hello world macOS 1! ' >> $GITHUB_STEP_SUMMARY
        cat $GITHUB_STEP_SUMMARY
        {
          echo "### :rocket: Workflow inputs"
          echo "| Arg                 | Value |"
          echo "| ------------------- | ----- |"
          echo "| Print inputs        | ${{ inputs.print-inputs }} |"
          echo "| Environment         | ${{ inputs.environment }} |"
          echo "| Cluster             | ${{ inputs.cluster }} |"
        } >> $GITHUB_STEP_SUMMARY
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache-dependency-path: subdir/package-lock.json
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run mocha

  generate-markdown-content:
    name: Test markdown
    runs-on: ubuntu-latest
    steps:
    - name: Generate Markdown content
      run: echo "## Markdown content" >> content.md
    - name: Export Markdown content to job summary
      run: cat content.md >> $GITHUB_STEP_SUMMARY
    - name: Add Markdown content as comment to pull request
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs')
          const body = fs.readFileSync('content.md', 'utf-8')
          comments = await github.paginate(
              github.rest.issues.listComments({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
              })
            )
          matches = comments.filter(comment => comment.body && comment.body.includes('Markdown content'))
          comment = matches[0]
          if (comment) {
             github.rest.issues.updateComment({
               owner: context.repo.owner,
               repo: context.repo.repo,
               comment_id: comment.id.toString(),
               body: body,
             })
           } else {
             github.rest.issues.createComment({
               issue_number: context.issue.number,
               owner: context.repo.owner,
               repo: context.repo.repo,
               body: body,
             })
           }

  build-and-test-linux-script:
    name: Test Linux
    runs-on: ubuntu-latest
    steps:
    - name: Show information in the GITHUB_STEP_SUMMARY
      uses: actions/github-script@v7
      env:
          summaryFile: pippo
      with:
        script: |
          const summary = '{"name":true, "count":42, "public":43, "internal":44, "private":45}';
          //var summary = JSON.parse(JSON.stringify(test))
          // --- file
          //const fs = require('fs')
          //const summary = fs.readFileSync(process.env.summaryFile, 'utf8')
          //---------------
          // make the heading array for the core.summary method
          const headingArray = [{data: 'Topic', header: true}, {data: 'Count', header: true}, {data: 'Public', header: true},{data: 'Internal', header: true},{data: 'Private', header: true}]
          //convert the summary array into an array that can be passed into the core.summary method
          const summaryArray = JSON.parse(summary).map(t => [t.name, t.count.toString(), t.public.toString(), t.internal.toString(), t.private.toString()])
          // join the two arrays
          const tableArray = [headingArray, ...summaryArray]
          await core.summary
              .addHeading(`Topics used on repos in the [${process.env.org}] organization`)
              .addTable(tableArray)
              .write()