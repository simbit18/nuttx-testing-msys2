# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Build MSYS2 Alpine Linux

permissions:
  contents: read
on: 
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/msys2_alpine.yml'
      
concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  Fetch-Source:
    runs-on: ubuntu-latest
    steps:
      - name: Determine Target Branches
        id: gittargets
        shell: bash
        run: |
          OS_REF=""
          APPS_REF=""
          # REF="refs/heads/simbit18-platforms"
          REF="refs/heads/simbit18-prefix"
          # REF="refs/heads/master"
          echo "Working with ref: $REF"
      - name: Checkout nuttx repo
        uses: actions/checkout@v4
        with:
          repository: simbit18/nuttx
          # ref: simbit18-platforms
          ref: simbit18-prefix
          # ref:  master
          path: sources/nuttx
          fetch-depth: 1
      - name: Checkout nuttx repo tags
        run: git -C sources/nuttx fetch --tags

      - name: Checkout apps repo
        uses: actions/checkout@v4
        with:
          repository: apache/nuttx-apps
          # ref: simbit18-platforms
          # ref: simbit18-20240221 
          ref: master
          path: sources/apps
          fetch-depth: 1

      - name: Tar sources
        run: tar zcf sources.tar.gz sources

      - name: Archive Source Bundle
        uses: actions/upload-artifact@v4
        with:
          name: source-bundle
          path: sources.tar.gz
  Alpine:
    permissions:
      contents: none
    # Containers must run in Linux based operating systems  
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: alpine:latest
    needs: Fetch-Source
    strategy:
      matrix:
        boards: [msys2]
    steps:
      - name: Create file status_job1.txt and write the job status into it
        if: always()
        run: |
          echo ${{ job.status }} > status_job1.txt
        
      - name: Upload file status_job1.txt as an artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: pass_status_job1
          path: status_job1.txt
          
      - name: Install Build Tools
        run:  |
         apk --no-cache --update add \
         bash \
         coreutils \
         findutils \
         gawk \
         bison \
         flex \
         gettext \
         texinfo \
         gperf \
         automake \
         libtool \
         binutils-dev \
         picocom \
         u-boot-tools \
         util-linux \
         patch \
         autoconf \
         build-base \
         bash-completion \
         shadow \
         git \
         curl \
         rsync \
         nano \
         tar \
         gzip \
         bzip2 \
         xz \
         zip \
         bsd-compat-headers \
         zlib-dev \
         ncurses-dev \
         cmake \
         xxd \
         python3 \
         py3-pip
         ## libstdc++ \
         ## libgcc
         ## Alpine 3.19.x Fix pip error: externally-managed-environment
         ## https://github.com/alpinelinux/docker-alpine/issues/361  
      - name: Create the virtual environment
        run:  |
         python3 -m venv --system-site-packages /usr/local \
                 && pip3 install --root-user-action=ignore --no-cache-dir \
         setuptools \
         wheel \
         pyelftools \
         cxxfilt \
         ninja \
         kconfiglib
        
        ## WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager.
        ## It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
        ##  ignore warning message
        ##  Container -> ENV PIP_ROOT_USER_ACTION=ignore
        ##  Action    -> pip install --root-user-action=ignore
        ##  WARNING: The directory '/github/home/.cache/pip' or its parent directory is not owned or is not writable by the current user.
        ##  The cache has been disabled. Check the permissions and owner of that directory. If executing pip with sudo, you should use sudo's -H flag.
        ##  Container -> ENV PIP_NO_CACHE_DIR=false
        ##  Action    -> pip3 install --no-cache-dir
        ## only for Alpine 3.18.x
        ## - name: Install Python 3 option
        ##  run:  |
        ##    pip3 install --root-user-action=ignore --no-cache-dir \
        ##    setuptools \
        ##    wheel \
        ##    pyelftools \
        ##    cxxfilt \
        ##    kconfiglib
      - name: Download Source Artifact
        uses: actions/download-artifact@v4
        with:
          name: source-bundle
          path: .

      - name: Extract sources
        run: tar zxf sources.tar.gz

      - name: Restore Tools Cache
        id: cache-tools
        uses: actions/cache@v4
        env:
          cache-name: ${{ runner.os }}-cache-tools
        with:
          path: ./sources/tools
          key: ${{ runner.os }}-tools-${{ hashFiles('./sources/nuttx/tools/ci/cibuild.sh') }}

      - name: Export NuttX Repo SHA
        run: echo "nuttx_sha=`git -C sources/nuttx rev-parse HEAD`" >> $GITHUB_ENV

      # Released version of Cython has issues with Python 11. Set runner to use Python 3.10
      # https://github.com/cython/cython/issues/4500
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Run Builds
        run: |
          echo "::add-matcher::sources/nuttx/.github/gcc.json"
          export ARTIFACTDIR=`pwd`/buildartifacts
          cd sources/nuttx/tools/ci
          ./cibuild.sh -i -A -C -R testlist/${{matrix.boards}}.dat
      - uses: actions/upload-artifact@v4
        with:
          name: alpine-builds
          path: buildartifacts/
        continue-on-error: true
      - name: Create file status_job2.txt and write the job status into it
        if: always()
        run: |
          echo ${{ job.status }} > status_job2.txt
      - name: Upload file status_job2.txt as an artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pass_status_job2
          path: status_job2.txt

  msys2:
    needs: Fetch-Source
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        boards: [msys2]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: false
          install: >-
            base-devel
            gcc
            gperf
            automake
            autoconf
            git
            python3
            ncurses-devel
            unzip
            zip
            tio
            zlib-devel
            cmake
            ninja
            python-pip 
            vim
        
      - name: pip3 install
        run: |
          echo 'pip3 install'
          uname
          pip3 install --root-user-action=ignore --no-cache-dir pyelftools cxxfilt kconfiglib
          
      ## - run: git config --global core.autocrlf false
      - name: Download Source Artifact
        uses: actions/download-artifact@v4
        with:
          name: source-bundle
          path: .

      - name: Extract sources
        run: tar zxf sources.tar.gz
        
      - name: Export NuttX Repo SHA
        run: echo "nuttx_sha=`git -C sources/nuttx rev-parse HEAD`" >> $GITHUB_ENV
        
      - name: Run Builds
        run: |
          echo "::add-matcher::sources/nuttx/.github/gcc.json"
          export ARTIFACTDIR=`pwd`/buildartifacts
          git config --global --add safe.directory /github/workspace/sources/nuttx
          git config --global --add safe.directory /github/workspace/sources/apps
          cd sources/nuttx/tools/ci
          ## ./cibuild.sh -g -i -c -A -R testlist/${{matrix.boards}}.dat
          ./cibuild.sh -g -i -A -C -R testlist/${{matrix.boards}}.dat
      - uses: actions/upload-artifact@v4
        with:
          name: msys2-builds
          path: buildartifacts/
        continue-on-error: true
      - name: Create file status_job2.txt and write the job status into it
        if: always()
        run: |
          echo ${{ job.status }} > status_job2.txt
      - name: Upload file status_job2.txt as an artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pass_status_job2
          path: status_job2.txt
