# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: CI Build Cygwin
on:
  workflow_call:
    inputs:
      testlist_names:
        type: string
        required: true
    outputs:
      release:
        value: "false"

permissions:
  contents: read
jobs:
  build_Cygwin:
    runs-on: windows-latest
    env:
        namejob: Cygwin
    strategy:
      fail-fast: false
      matrix:
        boards: ${{ fromJson(inputs.testlist_names) }}
    defaults:
      run:
        shell: C:\cygwin\bin\bash.exe '{0}'
    steps:
      - name: Configure git
        run: |
          git config --global core.autocrlf input
        shell: pwsh
      - name: Checkout from git
        uses: actions/checkout@v4
      # install cygwin and build tools
      - name: Install Cygwin
        uses: cygwin/cygwin-install-action@master
        with:
          platform: x86_64
          site: https://mirrors.kernel.org/sourceware/cygwin/
          packages: >-
            coreutils
            make
            gcc-core
            gcc-g++
            binutils
            gperf
            flex
            git
            bison
            byacc
            gdb
            unzip
            awk
            automake-1.15
            autoconf
            wget
            xxd
            libmpc-devel
            libncurses-devel
            libmpfr-devel
            libiconv-devel
            zlib-devel
            patch
            python3
            cmake
            ninja
            curl
            python-pip
        
      - name: pip3 install
        run: |
          echo 'pip3 install'
          uname
          pip3 install --root-user-action=ignore --no-cache-dir pyelftools cxxfilt kconfiglib
          
      - run: git config --global core.autocrlf false
      - name: Download Source Artifact
        uses: actions/download-artifact@v4
        with:
          name: source-bundle
          path: .

      - name: Extract sources
        run: tar zxf sources.tar.gz

      - name: Restore Tools Cache
        id: cache-tools
        uses: actions/cache@v4
        env:
          cache-name: ${{ env.namejob }}-cache-tools
        with:
          path: ./sources/tools
          key: ${{ env.namejob }}-tools-${{ hashFiles('./sources/nuttx/tools/ci/platforms/cygwin.sh') }}

      - name: Export NuttX Repo SHA
        run: echo "nuttx_sha=`git -C sources/nuttx rev-parse HEAD`" >> $GITHUB_ENV

      - name: Run Builds
        run: |
          echo "::add-matcher::sources/nuttx/.github/gcc.json"
          export ARTIFACTDIR=`pwd`/buildartifacts
          ## git config --global core.autocrlf true
          ## git config --global core.autocrlf input
          # Configure Git on <your os> to properly handle line endings
          ## git config --unset core.filemode
          ## git config --global core.filemode false
          ## git config --global --add safe.directory /github/workspace/sources/nuttx
          ## git config --global --add safe.directory /github/workspace/sources/apps
          git config --global --add safe.directory '*'
          cd sources/nuttx/tools/ci
          ## ./cibuild.sh -g -d -i -c -A -R testlist/${{matrix.boards}}.dat
          ./cibuild.sh -c -d -i -c -A -C -N -R testlist/${{matrix.boards}}.dat
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.namejob }}-${{matrix.boards}}-builds
          path: buildartifacts/
        continue-on-error: true
      # # - name: Create file status_job2.txt and write the job status into it
        # # if: always()
        # # run: |
          # # echo ${{ job.status }} > status_job2.txt
      # # - name: Upload file status_job2.txt as an artifact
        # # if: always()
        # # uses: actions/upload-artifact@v4
        # # with:
          # # name: pass_status_job2
          # # path: status_job2.txt
