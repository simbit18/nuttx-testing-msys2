# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: CI Build Docker
on:
  workflow_call:
    inputs:
      ref_name:
        type: string
      package_names:
        type: string
        required: true
    outputs:
      release:
        value: "false"

permissions:
  contents: read
  
# jobs:
  # setup:
    # runs-on: ubuntu-latest
    # outputs:
      # matrix: ${{ steps.setVariables.outputs.matrix }}
    # steps:
      # - id: setVariables
        # #run: |
        # #  echo "::set-output name=matrix::$input"
        # #run: echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"
        # run: echo "name=matrix::$input" >> $GITHUB_OUTPUT
        # env:
          # input: ${{ inputs.package_names }}

  build_Docker:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      ## input: ${{ fromJson(inputs.package_names )}}
      ## input: ${{ inputs.package_names }}
    ## needs: setup
    strategy:
      matrix:
        # boards: ${{ env.input }}
        ## boards: ${{ fromJson(env.input) }}
        ## boards: ${{ needs.setup.outputs.matrix }}
        boards: ${{ fromJson(inputs.package_names) }}

    steps:
      - name: Download Source Artifact
        uses: actions/download-artifact@v4
        with:
          name: source-bundle
          path: .

      - name: Extract sources
        run: tar zxf sources.tar.gz

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Pull
        run: docker pull ghcr.io/apache/nuttx/apache-nuttx-ci-linux

      - name: Export NuttX Repo SHA
        run: echo "nuttx_sha=`git -C sources/nuttx rev-parse HEAD`" >> $GITHUB_ENV

      - name: Run builds
        uses: ./sources/nuttx/.github/actions/ci-container
        env:
          BLOBDIR: /tools/blobs
        with:
          run: |
            echo "::add-matcher::sources/nuttx/.github/gcc.json"
            export ARTIFACTDIR=`pwd`/buildartifacts
            git config --global --add safe.directory /github/workspace/sources/nuttx
            git config --global --add safe.directory /github/workspace/sources/apps
            cd sources/nuttx/tools/ci
            if [ "X${{matrix.boards}}" = "Xcodechecker" ]; then
                ./cibuild.sh -c -A -R --codechecker testlist/${{matrix.boards}}.dat
            else
                ./cibuild.sh -c -A -R testlist/${{matrix.boards}}.dat
            fi

      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: linux-builds
          path: buildartifacts/
        continue-on-error: true
