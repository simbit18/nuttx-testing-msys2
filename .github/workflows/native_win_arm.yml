# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Native Windows ARM

permissions:
  ## Allow publishing of GitHub Release
  contents: write
on: 
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/native_win_arm.yml'

jobs:
  build:
    strategy:
      matrix:
#        os: [windows-2019, windows-2022]
        os: [windows-2022]
        arch: [x64, x86]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    concurrency:
        group: ${{ github.ref }}-${{ github.base_ref }}-${{ github.head_ref }}-${{ matrix.os }}-${{ matrix.arch }}-Windows
        cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Checkout Source Files
        run: |
          rem $env:PATH
          rem gcc -v
          rem where.exe gcc
          rem where.exe curl
          dir "${{github.workspace}}"
          
          mkdir nuttxspace
          cd nuttxspace
          copy "${{github.workspace}}\native\nuttx_native_arm.bat" nuttx_native_arm.bat
          nuttx_native_arm.bat
          dir
          rem mkdir tools
          rem cd tools
          rem curl -L https://github.com/simbit18/kconfig-frontends-windows-mingw64/releases/download/kconfig-frontends-4.11.0/kconfig-frontends-windows-mingw64.zip -o kconfig-frontends-windows-mingw64.zip
          rem 7z x kconfig-frontends-windows-mingw64.zip -y
          rem dir
          rem move /y kconfig-frontends-windows-mingw64 "kconfig-frontends"
          rem dir
          rem curl -L https://github.com/simbit18/win-tools/releases/download/win-tools-v1.38.0/win-tools-v1.38.0.zip -o win-tools-v1.38.0.zip
          rem 7z x win-tools-v1.38.0.zip -y
          rem move /y win-tools-v1.38.0 "win-tools"
          rem del /q /f "*.zip%"
          rem dir
          rem rem cd "${{github.workspace}}
          
          rem Copy-Item -Path C:\mingw64\bin\mingw32-make.exe -Destination C:\mingw64\bin\make.exe
          rem where.exe mingw32-make
          rem where.exe make
          rem cmake --version
          rem where.exe cmake
          rem choco install ninja
          rem where.exe ninja
          rem pip install kconfiglib
          rem mkdir nuttxspace
          rem cd nuttxspace
          rem git clone --depth 1 https://github.com/apache/nuttx nuttx
          rem git clone --depth 1 https://github.com/apache/nuttx-apps apps
        shell: cmd
      - name: Checkout Source Files
        run: |
          cd nuttxspace
          git clone --depth 1 https://github.com/apache/nuttx nuttx
          git clone --depth 1 https://github.com/apache/nuttx-apps apps
        shell: cmd
      - name: Configuration
        run: |
          echo "BB_OVERRIDE_APPLETS=make ar" >> $GITHUB_ENV
          echo "BB_GLOBBING=0" >> $GITHUB_ENV
          echo "${{github.workspace}}\nuttxspace\tools\win-tools" >> "$GITHUB_PATH"
          echo "${{github.workspace}}\nuttxspace\tools\kconfig-frontends\bin" >> "$GITHUB_PATH"
          echo "${{github.workspace}}\nuttxspace\tools\gcc-arm-none-eabi\bin" >> "$GITHUB_PATH"
          set
          cd ${{github.workspace}}\nuttxspace\nuttx
          rem dir
          rem arm-none-eabi-gcc --version
          copy "${{github.workspace}}\native\configure.bat" tools\configure.bat
          copy "${{github.workspace}}\native\Config.mk" tools\Config.mk
          copy "${{github.workspace}}\native\Win.mk" tools\Win.mk
          copy "${{github.workspace}}\native\Make.defs" tools\Make.defs
          .\tools\configure -n nucleo-l152re:nsh
        shell: cmd
      - name: Build
        run: |
          rem set BB_OVERRIDE_APPLETS=make ar
          rem set BB_GLOBBING=0
          rem set PATH=${{github.workspace}}\nuttxspace\tools\win-tools;%PATH%
          rem set PATH=${{github.workspace}}\nuttxspace\tools\kconfig-frontends\bin;%PATH%
          rem set PATH=${{github.workspace}}\nuttxspace\tools\gcc-arm-none-eabi\bin;%PATH%
          rem set
          cd ${{github.workspace}}\nuttxspace\nuttx
          dir
          make
        shell: cmd
      # - name: Build
        # run: |
          # cd ${{github.workspace}}\nuttxspace\nuttx
          # dir
          # cmake -B vs2022 -DBOARD_CONFIG=sim/windows -G "Visual Studio 17 2022" -A Win32
          # :: cmake -B vs2022 -DBOARD_CONFIG=sim/windows -GNinja --check-system-vars --debug-trycompile
          # cmake --build vs2022 -v
          # cd vs2022
          # mkdir nuttxmsvc
          # dir
          # dir Debug
          # copy /Y .\Debug\nuttx.exe .\nuttxmsvc\nuttx.exe
          # 7z a ./nuttxmsvc_${{ matrix.arch }}.zip ./nuttxmsvc
        # shell: cmd

      # - name: Tests
        # run: |
          # gcc -v
          # cmake --version

      # - name: Upload Artifacts
        # uses: actions/upload-artifact@v4
        # with:
          # name: nuttx-${{ matrix.os }}-${{ matrix.arch }}
          # path: ./nuttxspace/nuttx/vs2022/nuttxmsvc_${{ matrix.arch }}.zip

