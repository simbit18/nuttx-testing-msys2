name: Nuttx-master cygwin choco

permissions:
  ## Allow publishing of GitHub Release
  contents: read
on: 
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/cygwin_choco.yml'

jobs:
  nuttx-choco-cygwin:
    runs-on: windows-latest
    steps:
    - name: Set git to use LF
      run: |
          git config --global core.autocrlf false
    - name: Checkout from git
      uses: actions/checkout@v4
    - name: Install cygwin base packages with chocolatey
      run: |
          choco config get cacheLocation
          choco install --no-progress cygwin
      shell: cmd
    - name: Install cygwin additional packages
      run: |
          C:\tools\cygwin\cygwinsetup.exe -qgnNdO ^
              -s http://mirrors.kernel.org/sourceware/cygwin/ ^
              -R C:\tools\cygwin ^
              -P coreutils,^
              make,^
              gcc-core,^
              gcc-g++,^
              gperf,^
              flex,^
              git,^
              bison,^
              byacc,^
              gdb,^
              unzip,^
              awk,^
              automake-1.15,^
              autoconf,^
              wget,^
              xxd,^
              libmpc-devel,^
              libncurses-devel,^
              libmpfr-devel,^
              libiconv-devel,^
              zlib-devel,^
              patch,^
              python3,^
              cmake,^
              ninja,^
              curl,^
              python-pip
      shell: cmd
    - name: Set ENV
      shell: cmd
      run: |
          echo PATH=C:\tools\cygwin\bin;C:\tools\cygwin\usr\bin >> %GITHUB_ENV%
          :: echo PATH=C:\tools\cygwin\bin;C:\tools\cygwin\usr\bin;%PATH% >> %GITHUB_ENV%
    - name: Check ENV
      shell: cmd
      run: |
          echo "PATH=%PATH%"
    - name: pip3 install
      run: |
          echo 'pip3 install'
          uname
          pip3 install --root-user-action=ignore --no-cache-dir pyelftools cxxfilt kconfiglib
      shell: cmd
    - name: Check ENV
      shell: cmd
      run: |
          echo "PATH=%PATH%"
          ls -a
    - name: Install kconfig-frontends
      shell: cmd
      run: |
          echo "PATH=%PATH%" &&
          uname -a &&
          gcc -v &&
          echo 'Install kconfig-frontends' &&
          curl -L https://bitbucket.org/nuttx/tools/get/master.tar.gz -o nuttx-tools.tar.gz &&
          mkdir nuttx-tools &&
          tar xvzf nuttx-tools.tar.gz --strip-components=1 -C nuttx-tools &&
          cd nuttx-tools/kconfig-frontends &&
          C:\tools\cygwin\bin\bash.exe ./configure --disable-kconfig --disable-nconf --disable-qconf ^
                      --disable-gconf --disable-mconf --disable-static ^
                      --disable-shared --disable-L10n &&
          touch aclocal.m4 Makefile.in &&
          make install

    - name: Install genromfs
      shell: cmd
      run: |
          echo 'Install genromfs'
          cd nuttx-tools
          tar xzf genromfs-0.5.2.tar.gz
          cd genromfs-0.5.2
          make install PREFIX=/opt/nuttxenv

    - name: Copy NXTOOL GENROMFS and clean source files
      shell: cmd
      run: |
          echo 'Copy NXTOOL GENROMFS and clean source files'
          cp /opt/nuttxenv/usr/bin/kconfig-conf.exe /usr/bin
          # cp /opt/nuttxenv/usr/bin/kconfig-mconf.exe /usr/bin
          cp /opt/nuttxenv/usr/bin/kconfig-tweak /usr/bin
          cp /opt/nuttxenv/usr/bin/genromfs.exe /usr/bin
          rm -rf nuttx-tools genromfs-0.5.2
          ls -a
          
    - name: Checkout Source Files
      shell: cmd
      run: |
          echo 'Checkout Source Files'
          mkdir nuttxspace
          ls -a
          cd nuttxspace
          git clone https://github.com/apache/incubator-nuttx nuttx
          git clone https://github.com/apache/incubator-nuttx-apps apps
          ## curl -L https://www.apache.org/dyn/closer.lua/nuttx/12.0.0/apache-nuttx-12.0.0.tar.gz?action=download -o nuttx.tar.gz
          ## curl -L https://www.apache.org/dyn/closer.lua/nuttx/12.0.0/apache-nuttx-apps-12.0.0.tar.gz?action=download -o apps.tar.gz
          ## tar zxf nuttx.tar.gz --one-top-level=nuttx --strip-components 1
          ## tar zxf apps.tar.gz --one-top-level=apps --strip-components 1
          ## ls -a
          ## cd nuttx
          ls -a

    - name: Build
      run: |
          echo 'Build'

          ## Move to nuttx
          cd nuttxspace/nuttx
          ls -a

          ## Show the GCC version
          gcc -v
          ## ls -a ../../
          ## cp -f ../../fix/1200/defconfig boards/sim/sim/sim/configs/nsh/defconfig
          ## cp -f ../../fix/1200/sim_hostmisc.c arch/sim/src/sim/posix/sim_hostmisc.c
          ## cp -f ../../fix/1200/lib_exit.c libs/libc/stdlib/lib_exit.c
          
          ## Configure the build
          ./tools/configure.sh -c sim:nsh
          
          ## mkdir nuttxmsys2
          
          ## Preserve the build config
          ## cp .config nuttxmsys2/nuttx.config
          make -j 4
          ls -a
          ## cp nuttx.exe nuttxmsys2/nuttx.exe
          ## cp System.map nuttxmsys2/System.map
          ## cp /usr/bin/msys-2.0.dll nuttxmsys2/msys-2.0.dll
          ## cp /usr/bin/msys-z.dll nuttxmsys2/msys-z.dll
          ## zip -r nuttxmsys2.zip nuttxmsys2
          
